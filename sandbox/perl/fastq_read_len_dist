#!/usr/bin/env perl

#output read length distribution
use strict;
use warnings;

die "Usage: $0 1.fastq 2.fastq ...\n" unless @ARGV;

for my $file(@ARGV)
{
	die "$file doesn't exist\n" unless -e $file;
	&check_line_number($file) or die "Not all reads have 4 lines\n";
	my %read_len_count=&count_read($file);
	my $total=0;
	for (sort {$a <=> $b } keys %read_len_count)
	{
	    warn "$read_len_count{$_} reads have length $_\n";
	    $total+=$read_len_count{$_};
	}
	warn "Total: $total reads in $file\n\n";
}

sub check_line_number
{
	#check if line number is multiple of 4
	my $file=shift @_;
	warn "Counting lines in $file\n";
	my $total=`wc -l $file`;
	chomp $total;
	$total=~s/\s.*//;
	$total % 4 ? return 0 : return 1;
}

sub count_read
{
    #count read, return a hash with key as read length, value as count
    my $file=shift @_;
	open IN,'<',$file or die "cannot open $file\n";
	no strict;
	my %read_len_count;
	while(<IN>)
	{
		if (/^@/)	
		{
		    my $id=$_;
		    $_=<IN>;
		    my $base_count=length($_)-1;
		    $_=<IN>; #line begins with '+'
		    $_=<IN>;
		    my $qual_count=length($_)-1;
		    die "$id has unequal length of bases and base qualities\n" unless $base_count==$qual_count;
		    $read_len_count{$base_count}++;

		}
	}
	use strict;
	return %read_len_count;
}
