"""
Definition of ListNode
class ListNode(object):

    def __init__(self, val, next=None):
        self.val = val
        self.next = next
"""
class Solution:
    """
    @param head: The first node of the linked list.
    @return: You should return the head of the sorted linked list,
                  using constant space complexity.
    """
    def sortList(self, head):
        # write your code here
        prev = None
        newHead = head
        n = getLen(head)
        if n == 0:
            return(None)
        elif n == 1:
            return(head)
        for i in range((n+1)/2):
            prev = newHead
            newHead = newHead.next
        prev.next = None
        head = self.sortList(head)
        newHead = self.sortList(newHead)
        head = merge(head,newHead)
        return(head)
def getLen(head):
    n = 0
    while head:
        n += 1
        head = head.next
    return(n)
def merge(head1,head2):
    dummy = ListNode(0)
    dummyHead = dummy
    while head1 and head2:
        if head1.val > head2.val:
            dummyHead.next = head2
            head2 = head2.next
        else:
            dummyHead.next = head1
            head1 = head1.next
        dummyHead = dummyHead.next
    if head1:
        dummyHead.next = head1
    else:
        dummyHead.next = head2
    return(dummy.next)
