/**
 * Definition for ListNode.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int val) {
 *         this.val = val;
 *         this.next = null;
 *     }
 * }
 */ 
public class Solution {
    /**
     * @param head: The first node of linked list.
     * @param n: An integer.
     * @return: The head of linked list.
     */
    ListNode removeNthFromEnd(ListNode head, int n) {
        int len = size(head);
        if(len == 0) return(null);
        if(n <= 0) return(head);
        // write your code here
        ListNode dummy = new ListNode(0);
        ListNode prev = dummy;
        ListNode cur = head;
        dummy.next = head;
        int idx = 0;
        while(cur != null && idx < len - n) {
            cur = cur.next;
            prev = prev.next;
            idx++;
        }
        prev.next = cur.next;
        return(dummy.next);
    }
    int size(ListNode head) {
        int n = 0;
        while(head != null) {
            head = head.next;
            n++;
        }
        return(n);
    }
}
