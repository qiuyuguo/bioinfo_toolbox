class Solution:
    # @param s: A string s
    # @param dict: A dictionary of words dict
    def wordBreak(self, s, dict):
        # write your code here
        #use recursion first
        #print(s)
        n = len(s)
        if s in dict or n == 0:
            return(True)
        ret = False
        for i in range(n):
            if s[0:i] in dict and self.wordBreak(s[i:],dict):
                return(True)
        return(ret)
#x = Solution()
#print(x.wordBreak('aaab',{'aa':True,'ab':True}))
#did not pass all tests due to memory limit, but I think the algorithm
#is correct by itself.
